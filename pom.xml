<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <!--        <parent>-->
    <!--            <groupId>org.springframework.boot</groupId>-->
    <!--            <artifactId>spring-boot-starter-parent</artifactId>-->
    <!--            <version>2.7.3</version>-->
    <!--            <relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
    <!--        </parent>-->
    <groupId>com.execute</groupId>
    <artifactId>protocol</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>protocol</name>
    <description>protocol</description>
    <modules>
        <module>protocol-core</module>
        <module>protocol-auth</module>
        <module>protocol-admin</module>
        <module>protocol-app</module>
        <module>packaging</module>

    </modules>
    <properties>
        <java.version>17</java.version>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>

        <!-- File encoding has not been set, using platform encoding UTF-8, i.e. build is platform dependent! -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <lombok.version>1.18.24</lombok.version>
        <spring.boot.version>2.7.4</spring.boot.version>
        <spring.validation.version>2.4.0</spring.validation.version>
        <project.version>0.0.1-SNAPSHOT</project.version>

        <mysql.connector.version>8.0.30</mysql.connector.version>
        <security.test.version>5.7.3</security.test.version>

        <jjwt.version>0.11.5</jjwt.version>

        <mapstruct.version>1.5.2.Final</mapstruct.version>
        <lombok.mapstruct.binding.version>0.2.0</lombok.mapstruct.binding.version>
    </properties>
    <dependencyManagement>
        <dependencies>

            <!-- TOMCAT  -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-tomcat</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- При компиляции перезагружает сервер -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <version>${spring.boot.version}</version>
                <optional>true</optional>
            </dependency>
            <!-- Spring boot starter -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter</artifactId>
                <version>${spring.boot.version}</version>
                <exclusions>
                    <!-- log4j исключается в spring-boot-starter -->
                    <exclusion>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-starter-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- вместо log4j добавляем log4j2-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-log4j2</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- зависимость котора связывает файл log4j2.yml с логами и там можно делать настройки логов -->
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>2.13.4</version>
            </dependency>
            <!-- WEB -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- Validation -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-validation</artifactId>
                <version>${spring.validation.version}</version>
            </dependency>

            <!-- JPA -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-data-jpa</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>
            <!-- MySql connector -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.connector.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Springframework security -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>

            <!-- JWT -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-api</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-impl</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt-jackson</artifactId>
                <version>${jjwt.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.3.1</version>
            </dependency>

            <!-- Redis  -->
            <!-- Не используем spring-boot-starter-data-redis потом что, redis оочень чувствителен к версиям -->
            <!-- Короче все к херам подает если используем выше указанную строку -->
            <dependency>
                <groupId>org.springframework.data</groupId>
                <artifactId>spring-data-redis</artifactId>
                <version>2.3.3.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>redis.clients</groupId>
                <artifactId>jedis</artifactId>
                <version>3.3.0</version>
                <type>jar</type>
            </dependency>

            <!-- Mapstruct MAPPER  -->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>

            <!-- Пакет для валидации дат, хотя там наверное полно возможностей -->
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.12.0</version>
            </dependency>

            <!-- Junit 5 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>5.9.1</version>
                <scope>test</scope>
            </dependency>

            <!-- H2 база для тестов, тестовые аннотации AutoConfigureTestDatabase или DataJpaTest
                 используют H2 чтобы, создавать отдельные БД в памяти для тестов -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>2.1.214</version>
                <scope>test</scope>
            </dependency>

            <!-- Встраиваемый сервер Embedded-Redis, тестовые аннотации AutoConfigureTestDatabase или DataRedisTest
                 используют Embedded-Redis для создания и внедрения отдельного Redis Server в памяти для тестов,
                 требуется отдельная настройка в TestConfig или в похожем фале -->
            <dependency>
                <groupId>it.ozimov</groupId>
                <artifactId>embedded-redis</artifactId>
                <version>0.7.3</version>
                <scope>test</scope>
            </dependency>

            <!-- Tests -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <scope>test</scope>
                <!-- exclude junit 4 -->
                <exclusions>
                    <exclusion>
                        <groupId>junit</groupId>
                        <artifactId>junit</artifactId>
                    </exclusion>
                </exclusions>
                <version>${spring.boot.version}</version>
            </dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-test</artifactId>
                <version>${security.test.version}</version>
            </dependency>

            <!-- SLF4J -->
<!--            <dependency>-->
<!--                <groupId>org.slf4j</groupId>-->
<!--                <artifactId>slf4j-simple</artifactId>-->
<!--                <version>2.0.3</version>-->
<!--                <scope>test</scope>-->
<!--            </dependency>-->

        </dependencies>
    </dependencyManagement>
    <dependencies>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
            <version>${spring.boot.version}</version>
            <type>pom</type>
        </dependency>
    </dependencies>
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <!--  Этот плагин идет вместе с JUnit 5 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
<!--                <configuration>-->
<!--                    <skipTests>true</skipTests>-->
<!--                </configuration>-->
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring.boot.version}</version>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>



        <!-- Пакет для использования анотации @ConfigurationProperties -->
        <!--    <dependency>-->
        <!--        <groupId>org.springframework.boot</groupId>-->
        <!--        <artifactId>spring-boot-configuration-processor</artifactId>-->
        <!--        <version>2.7.3</version>-->
        <!--        <optional>true</optional>-->
        <!--    </dependency>-->


        <!-- oauth2  -->
        <!--            <dependency>-->
        <!--                <groupId>org.springframework.boot</groupId>-->
        <!--                <artifactId>spring-boot-starter-oauth2-client</artifactId>-->
        <!--                <version>${spring.boot.version}</version>-->
        <!--            </dependency>-->
        <!--            <dependency>-->
        <!--                <groupId>org.springframework.security.oauth.boot</groupId>-->
        <!--                <artifactId>spring-security-oauth2-autoconfigure</artifactId>-->
        <!--                <version>2.6.1</version>-->
        <!--            </dependency>-->